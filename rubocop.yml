# ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
# Beware if you change this file on your own, this is a team effort :)
# ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––

# A note on how to override the Rubocop defaults:
# -> Hashes are *merged* with upstream defaults.
# -> Arrays are *overwritten* with our definition.

AllCops:

  # Keep this up-to-date with the Ruby version we use in Production.
  TargetRubyVersion: 2.1

  # By default Rubocop checks every .rb recursively inside the current directory.
  # We want to exclude some files, so let's modify the original Array.
  Exclude:

    # Our list here will override the Rubocop default exclusion list.
    # So we need to add the defaults first. You can find them here:
    # https://github.com/bbatsov/rubocop/blob/master/config/default.yml
    - vendor/**/*

    # We don't care much about auto-generated files.
    # There is no point in applying our style guide here.
    - db/schema.rb

    # Migrations are run once and never touched again.
    # Where there is no need for maintenance, there is no need for proper coding style.
    - db/migrate/*

# –––––––––––––––––––––––––––––––––––––––––––
# Please try to keep this list alphabetically
# –––––––––––––––––––––––––––––––––––––––––––

# This is a pure performance immprovement without any other positive side-effects.
# We're willing to accept the performance penalty favoring code readability.
Performance/CaseWhenSplat:
  Enabled: false

# Using `#flat_map` is just not very intuitive and used utterly seldom.
# The performance penalty is minimal, so let us not forbid the usual `#map`
Performance/FixedSize:
  Enabled: false

# Using `#reverse_each` is mentally a little more challenging than just
# a simple `reverse.each`. The latter is not really much faster anyway.
Performance/ReverseEach:
  Enabled: false

# Of course you should use `#delete` to remove characters from a String.
# But we don't want to enforce you to use the non-intuitive `#tr` instead of `#gsub`
Performance/StringReplacement:
  Enabled: false

# Top-level class documentation is cumbersome when starting/spiking a new project.
# Generally our code should be understandable without comments.
# Also, there are too many legacy classes without documentation that should not break rubocop.
Style/Documentation:
  Enabled: false

# An empty line below `class` and `module` can increase readability in many cases.
# For now, we allow this rule, but it's certainly open for discussion.
Style/EmptyLinesAroundClassBody:
  Enabled: false
Style/EmptyLinesAroundModuleBody:
  Enabled: false

# Excessive use of `self.` is just noise. But we don't generally forbid using it.
# See also https://github.com/bukowskis/style-guide/commit/9d1cad9d29c2064defd713386897591e8fb8f1be
Style/RedundantSelf:
  Enabled: false
